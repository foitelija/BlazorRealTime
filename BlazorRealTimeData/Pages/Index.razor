@page "/"
@using BlazorRealTimeData.Controllers;
@using BlazorRealTimeData.Data;
@using Microsoft.AspNetCore.SignalR.Client;
@inject IMessageController _service
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>Live Page</PageTitle>

@if(Messages == null)
{
    <p><em>Loading......</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>RegNum</th>
                <th>Sender</th>
                <th>Title</th>
                <th>Reciever</th>
                <th>Status</th>
                <th>RegDate</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var message in Messages)
            {
                <tr class="a" @onclick="@(()=>JsAlertMessageExample(message))">
                    <td>@message.Id</td>
                    <td>@message.RegNum</td>
                    <td>@message.Sender</td>
                    <td>@message.Title</td>
                    <td>@message.Reciever</td>
                    <td>@message.Status</td>
                    <td>@message.RegDate</td>
                </tr>
            }
        </tbody>
    </table>
}


@code{
    List<Message> Messages = new List<Message>();

    private HubConnection? hub;
    protected override async Task OnInitializedAsync()
    {
        Messages = await _service.GetMessageAsync();

        hub = new HubConnectionBuilder().WithUrl(Navigation.ToAbsoluteUri("/messagehub")).Build();

        hub.On<List<Message>>("RefreshMessages", messages =>
        {
            Messages = messages;
            InvokeAsync(StateHasChanged);
        });

        await hub.StartAsync();
    }

    protected private async Task JsAlertMessageExample(Message message)
    {
        await JSRuntime.InvokeVoidAsync("alert", message.ToString());
    }
}